visual studio extensions
sln	solution
resx	resource information file

visual studio autogenerated files
Properties folder?

when forms are designed, there are two partial classes. filename.cs and filename.Designer.cs. furthermore, you can right click filename.cs, and select 'view code' or 'view design'.


partial class
protected override


dbml
object browser

initial visual studio settings
change spaces to tabs
change auto {} settings

shortcuts - http://www.dofactory.com/ShortCutKeys/ShortCutKeys.aspx
	remove usings - right click ...

	keyboard shortcuts
		control+f5		run without debugging
		control -/+		go to last cursor
		f1				help for method where cursor currently is
		right click->go to definition
		when writing a function that hasn't been included, press ??? to add inclusion
		control+K or control+F, control+D 	format entire document or selction, with the new settings? [check shortcuts]
		control+J		force intellisense
		control+.		import the base class of intellisense's function
		f7/shift+f7		switches from to design view and back
		control+shift+1/2	navigates to the next definition, declaration, or reference of an item
		control+]		matching brace
		control+tab/control+shift+tab		next tab

neat tricks
parenthesis declaration		(new frmAddBankTransferLocation()).Show();

C#/.NET features
lambda =>	function(param1, param2 => function2();)
		function(param1, param2 => {x=3; function2(x+param1);}
delegate	function pointer
func		generic delegate
action		generic void delegate

?? operator	a ?? b ?? c	returns the first non-null value
public int ID { get; set; }
	public int SomeField {
			get {
				return _someField;
			}
			set {
				_someField = value ;
			}
ref				reference operator, C++'s &
out				like reference, except it doesn't check for uninitialized values

reflection
displayMember/ValueMember

properties
static cast	(dataType)dateToBeConverted
toString	a function of object
person P = new Person{ID=1, Name=Rahil;}

iDisposable	interface for garbage collection
interface	guarantees you implement the interface, class: interface, the class must use the functions in interface [this might be backwards], need to read more

DataContext/dbml	model of the database?
dispose		cleans up the statements inside. like automatic garbage collection, except it's forced. ex. file close
using		like try with finally dispose
goto		use with good judgement, can use to break out of double for loop

naming conventions
btnName
FunctionName
GUI/Winforms - should the widget names = database column names?

@-quoted string literals - do not have escape sequences. ex. @"c:\Docs\Source\a.txt"  // rather than "c:\\Docs\\Source\\a.txt"

